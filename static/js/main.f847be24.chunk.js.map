{"version":3,"sources":["components/ShopHeader/ShopHeader.js","components/Pages/CartPage.js","components/BookstoreServiceContext/BookstoreServiceContext.js","components/HOC/WithBookstoreService.js","actions/index.js","components/BookListItem/BookListItem.js","components/Spinner/Spinner.js","components/ErrorIndicator/ErrorIndicator.js","components/BookList/BookList.js","components/ShoppingCart/ShoppingCart.js","components/Pages/HomePage.js","components/App/App.js","components/ErrorBoundry/ErrorBoundry.js","services/bookstore-service.js","reducers/bookList.js","reducers/shoppingCart.js","reducers/index.js","store.js","index.js"],"names":["ShopHeader","numItems","total","className","to","CartPage","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","WithBookstoreService","Wrapped","props","bookStoreService","fetchBooks","dispatch","type","getBooks","then","data","payload","catch","error","booksError","bookAddedToCart","bookId","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","Spinner","ErrorIndicator","BookList","books","map","key","id","BookListContainer","this","loading","Component","connect","bookList","ownProps","mapDispatchToProps","onIncrease","onDecrease","onDelete","shoppingCart","items","cartItems","orderTotal","item","idx","count","HomePage","App","role","path","exact","component","ErrorBoundry","state","hasError","setState","children","BookStoreService","Promise","resolve","reject","setTimeout","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.f847be24.chunk.js","sourcesContent":["import React from \"react\";\nimport './ShopHeader.css';\nimport { Link } from 'react-router-dom';\n\nconst ShopHeader = ({ numItems, total }) => {\n  return (\n    <header className=\"shop-header row\">\n      <Link to=\"/\">\n        <div className=\"logo text-dark\">ReStore</div>\n      </Link>\n      <Link to=\"/cart\">\n        <div>\n          <i className=\"cart-icon fa fa-shopping-cart\" />\n          { numItems } items (${ total })\n        </div>\n      </Link>\n    </header>\n  );\n};\n\nexport default ShopHeader;\n","import React from \"react\";\n\nconst CartPage = () => {\n  return (\n    <div>Cart Page</div>\n  );\n};\n\nexport default CartPage;\n","import React from \"react\";\n\nconst {\n  Provider: BookstoreServiceProvider,\n  Consumer: BookstoreServiceConsumer\n} = React.createContext();\n\nexport {\n  BookstoreServiceProvider,\n  BookstoreServiceConsumer\n}\n","import React from \"react\";\nimport { BookstoreServiceConsumer } from './../BookstoreServiceContext/BookstoreServiceContext';\n\nconst WithBookstoreService = () => (Wrapped) => {\n\n  return (props) => {\n    return (\n      <BookstoreServiceConsumer>\n        {\n          (bookStoreService) => {\n            return <Wrapped {...props} bookStoreService={bookStoreService}/>\n          }\n        }\n      </BookstoreServiceConsumer>\n    );\n  }\n};\n\nexport default WithBookstoreService;\n","\nconst bookLoaded = (newBooks) => {\n  return {\n    type: 'FETCH_BOOKS_REQUEST',\n    payload: newBooks\n  }\n};\n\nconst booksRequested = () => {\n  return {\n    type: 'FETCH_BOOKS_SUCCESS'\n  }\n};\n\nconst booksError = error => {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error\n  }\n};\n\nconst fetchBooks = (bookStoreService, dispatch) => () => {\n  dispatch(booksRequested());\n  bookStoreService.getBooks()\n    .then(data => {\n      dispatch(bookLoaded(data));\n    })\n    .catch(error => dispatch(booksError(error)))\n};\n\nconst bookRemovedFromCart = bookId => {\n  return {\n    type: 'BOOK_REMOVED_FROM_CART',\n    payload: bookId\n  }\n};\n\nconst allBooksRemovedFromCart = bookId => {\n  return {\n    type: 'ALL_BOOKS_REMOVED_FROM_CART',\n    payload: bookId\n  }\n};\n\nconst bookAddedToCart = bookId => {\n  return {\n    type: 'BOOK_ADDED_TO_CART',\n    payload: bookId\n  }\n};\n\nexport {\n  fetchBooks,\n  bookAddedToCart,\n  allBooksRemovedFromCart,\n  bookRemovedFromCart\n};\n","import React from \"react\";\nimport './BookListItem.css';\n\nconst BookListItem = ({ book, onAddedToCart }) => {\n  const { title, author, price, coverImage } = book;\n  return (\n    <div className=\"book-list-item\">\n      <div className=\"book-cover\">\n        <img src={coverImage} alt=\"cover\"/>\n      </div>\n      <div className=\"book-details\">\n        <span className=\"book-title\">{ title }</span>\n        <div className=\"book-author\">{ author }</div>\n        <div className=\"book-price\">${ price }</div>\n        <button\n          onClick={onAddedToCart}\n          className=\"btn btn-info add-to-cart\"\n        >Add To Cart</button>\n      </div>\n    </div>\n  );\n};\n\nexport default BookListItem;\n","import React from \"react\";\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div>Spinner</div>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport './ErrorIndicator.css';\n\nconst ErrorIndicator = () => {\n  return (\n    <div>Error Indicator Component</div>\n  );\n};\n\n\nexport default ErrorIndicator;\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport WithBookstoreService from \"../HOC/WithBookstoreService\";\nimport { fetchBooks, bookAddedToCart } from './../../actions/index';\nimport './BookList.css';\n\nimport BookListItem from \"../BookListItem/BookListItem\";\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorIndicator from \"../ErrorIndicator/ErrorIndicator\";\n\nconst BookList = ({ books, onAddedToCart }) => {\n  return (\n    <ul className=\"book-list\">\n      {\n        books.map(book => {\n          return (\n            <li key={book.id}>\n              <BookListItem book={book} onAddedToCart={() => onAddedToCart(book.id)}/>\n            </li>\n          );\n        })\n      }\n    </ul>\n  );\n};\n\nclass BookListContainer extends Component{\n\n  componentDidMount() {\n    this.props.fetchBooks();\n  };\n\n\n  render() {\n    const { books, loading, error, onAddedToCart } = this.props;\n\n    if (loading) {\n      return <Spinner/>\n    }\n\n    if (error) {\n      return <ErrorIndicator/>\n    }\n\n    return <BookList books={books} onAddedToCart={onAddedToCart}/>\n  }\n}\n\nconst mapStateToProps = ( {bookList: { books, loading, error }}) => {\n  return { books, loading, error }\n};\n\n// const mapDispatchToProps = {\n//   bookLoaded,\n//   booksRequested,\n//   booksError\n// };\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { bookStoreService } = ownProps;\n  return {\n    fetchBooks: fetchBooks(bookStoreService, dispatch),\n    onAddedToCart: id => dispatch(bookAddedToCart(id))\n  }\n};\n\n\nexport default WithBookstoreService()(\n  connect(mapStateToProps, mapDispatchToProps)(BookListContainer)\n);\n","import React from \"react\";\nimport './ShoppingCart.css';\nimport { connect } from 'react-redux';\n\nimport { bookAddedToCart, allBooksRemovedFromCart, bookRemovedFromCart } from './../../actions/index';\n\nconst ShoppingCart = ({ items, total, onIncrease, onDecrease, onDelete }) => {\n  return (\n    <div className=\"shopping-cart-table\">\n      <h2>Your Order</h2>\n      <table className=\"table\">\n        <thead>\n        <tr>\n          <th>#</th>\n          <th>Item</th>\n          <th>Count</th>\n          <th>Price</th>\n          <th>Action</th>\n        </tr>\n        </thead>\n\n        <tbody>\n            {\n              items.map((item, idx) => {\n                const { id, title, count, total } = item;\n                return (\n                  <tr key={ id }>\n                    <td>{ idx + 1 }</td>\n                    <td>{ title }</td>\n                    <td>{ count }</td>\n                    <td>${ total }</td>\n                    <td>\n                      <button\n                        onClick={() => onDelete(id)}\n                        className=\"btn btn-outline-danger btn-sm float-right\">\n                        <i className=\"fa fa-trash-o\" />\n                      </button>\n                      <button\n                        onClick={() => onIncrease(id)}\n                        className=\"btn btn-outline-success btn-sm float-right\">\n                        <i className=\"fa fa-plus-circle\" />\n                      </button>\n                      <button\n                        onClick={() => onDecrease(id)}\n                        className=\"btn btn-outline-warning btn-sm float-right\">\n                        <i className=\"fa fa-minus-circle\" />\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })\n            }\n        </tbody>\n      </table>\n      <div className=\"total\">\n        Total: ${ total }\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ( {shoppingCart: { cartItems, orderTotal }}) => {\n  return {\n    items: cartItems,\n    total: orderTotal }\n};\n\nconst mapDispatchToProps = {\n  onIncrease: bookAddedToCart,\n  onDecrease: bookRemovedFromCart,\n  onDelete: allBooksRemovedFromCart\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart);\n","import React from \"react\";\nimport BookList from \"../BookList/BookList\";\nimport ShoppingCart from \"../ShoppingCart/ShoppingCart\";\n\nconst HomePage = () => {\n  return (\n    <div>\n      <BookList />\n      <ShoppingCart/>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom';\nimport ShopHeader from \"../ShopHeader/ShopHeader\";\nimport './App.css'\n\nimport CartPage from \"../Pages/CartPage\";\nimport HomePage from \"../Pages/HomePage\";\n\nconst App = () => {\n  return (\n    <main role=\"main\" className=\"container\">\n      <ShopHeader numItems={5} total={210}/>\n      <Switch>\n        <Route path=\"/Re-store/\" exact component={ HomePage }/>\n        <Route path=\"/Re-store/cart\" component={ CartPage }/>\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n","import React, { Component } from \"react\";\n\nimport ErrorIndicator from \"../ErrorIndicator/ErrorIndicator\";\n\nexport default class ErrorBoundry extends Component{\n\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator/>\n    }\n\n    return this.props.children;\n  }\n}\n","export default class BookStoreService {\n\n  data = [\n    {\n      id: 1,\n      title: 'Production-Ready Microservices',\n      author: 'Susan J. Fowler',\n      price: 32,\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg'},\n    {\n      id: 2,\n      title: 'Release It!',\n      author: 'Michael T. Nygard',\n      price: 45,\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg'}\n  ];\n\n  getBooks() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(this.data);\n        // reject(new Error('Some bad happened!!!'));\n      }, 700)\n    })\n  }\n\n}\n","const updateBookList = (state, action) => {\n  if (state === undefined) {\n    return {\n      books: [],\n      loading: true,\n      error: null,\n    }\n  }\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS': {\n      return {\n        books: [],\n        loading: true,\n        error: null\n      }\n    }\n    case 'FETCH_BOOKS_REQUEST': {\n      return {\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n    }\n    case 'FETCH_BOOKS_FAILURE': {\n      return {\n        books: [],\n        loading: false,\n        error: action.payload\n      }\n    }\n    default:\n      return state.bookList;\n  }\n};\n\nexport default updateBookList;\n","const updateCartItems = (cartItems, item, idx) => {\n  if (item.count === 0) {\n    return [\n      ...cartItems.slice(0, idx),\n      ...cartItems.slice(idx + 1)\n    ];\n  }\n\n  if (idx === -1) {\n    return [\n      ...cartItems,\n      item\n    ];\n  }\n\n  return [\n    ...cartItems.slice(0, idx),\n    item,\n    ...cartItems.slice(idx + 1)\n  ];\n};\n\nconst updateCartItem = (book, item = {}, quantity) => {\n  const {\n    id = book.id,\n    count = 0,\n    title = book.title,\n    total = 0 } = item;\n\n  return {\n    id,\n    title,\n    count: count + quantity,\n    total: total + quantity*book.price\n  }\n};\n\nconst updateOrder = (state, bookId, quantity) => {\n\n  const { bookList: {books}, shoppingCart: {cartItems} } = state;\n  const book = books.find(book => book.id === bookId);\n  const itemIndex = cartItems.findIndex(book => book.id === bookId);\n  const item = cartItems[itemIndex];\n  const newItem = updateCartItem(book, item, quantity);\n  return {\n    orderTotal: 0,\n    cartItems: updateCartItems(cartItems, newItem, itemIndex)\n  }\n};\n\nconst updateShoppingCart = (state, action) => {\n  if (state === undefined) {\n    return {\n      cartItems: [],\n      orderTotal: 0\n    }\n  }\n  switch (action.type) {\n    case 'BOOK_ADDED_TO_CART': {\n      return updateOrder(state, action.payload, 1);\n    }\n    case 'ALL_BOOKS_REMOVED_FROM_CART': {\n      const item = state.shoppingCart.cartItems.find(({ id }) => id === action.payload);\n      return updateOrder(state, action.payload, -item.count);\n    }\n    case 'BOOK_REMOVED_FROM_CART': {\n      return updateOrder(state, action.payload, -1);\n    }\n    default:\n      return state.shoppingCart;\n  }\n};\n\nexport default updateShoppingCart;\n","import updateBookList from \"./bookList\";\nimport updateShoppingCart from \"./shoppingCart\";\n\nconst reducer = (state, action) => {\n  return {\n    bookList: updateBookList(state, action),\n    shoppingCart: updateShoppingCart(state, action)\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/App/App';\nimport ErrorBoundry from \"./components/ErrorBoundry/ErrorBoundry\";\nimport BookStoreService from \"./services/bookstore-service\";\nimport { BookstoreServiceProvider } from \"./components/BookstoreServiceContext/BookstoreServiceContext\";\n\nimport store from \"./store\";\n\nconst bookStoreService = new BookStoreService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <BookstoreServiceProvider value={bookStoreService}>\n        <Router>\n          <App/>\n        </Router>\n      </BookstoreServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}